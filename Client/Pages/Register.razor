@page "/register"
@using RealWorldApp.Client.Shared
@layout FlatLayout
@inject HttpClient Http
@using RealWorldApp.Shared.Models
@inject NavigationManager _navigationManager

<h3 class="card-title text-center mb-4">Registrar</h3>
<EditForm Model="register" OnValidSubmit="RegisterUser">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-floating mb-3">
        <InputText id="username" @bind-Value="register.Username" class="form-control" placeholder="Username" />
        <label for="username">Username</label>
    </div>

    <div class="form-floating mb-3">
        <InputText id="email" @bind-Value="register.Email" class="form-control" placeholder="Email" />
        <label for="email">Email</label>
    </div>

    <div class="form-floating mb-3">
        <InputText id="password" @bind-Value="register.Password" type="password" class="form-control" placeholder="Password" />
        <label for="password">Password</label>
        <small id="passwordHelpBlock" class="form-text text-muted">
            Your password must be 8-20 characters long, contain letters and numbers, and must not contain spaces, special characters, or emoji.
        </small>
    </div>
    <div class="d-flex justify-content-end">
        <button type="submit" class="btn btn-success">Register</button>
    </div>

    <p class="mt-3">
        Already have an account?
        <NavLink href="/login">
            login
        </NavLink>
    </p>
</EditForm>
@if (successRegister != null)
{
    <span class="alert alert-info">@successRegister</span>
}
else if (faildRegister != null)
{
    <span class="alert alert-danger">@faildRegister</span>
}

@code {
    private Registeration register = new Registeration();
    private string? successRegister;
    private string? faildRegister;

    private async Task RegisterUser()
    {
        var response = await Http.PostAsJsonAsync("api/auth/register", register);
        if (response.IsSuccessStatusCode)
        {
            successRegister = "Congratulations, you have registered successfully!";
            _navigationManager.NavigateTo("/login");
        }
        else
        {
            var error = await response.Content.ReadAsStringAsync();
            faildRegister = error;
        }
    }
}
