@page "/login"
@layout CustomLayout
@using Microsoft.AspNetCore.Components.Authorization
@using RealWorldApp.Shared.Models
@using Blazored.SessionStorage
@inject HttpClient Http
@inject Blazored.SessionStorage.ISessionStorageService _sessionStorage
@inject AuthenticationStateProvider _authStateProvider
@inject NavigationManager _navigationManager

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card mt-5 shadow">
                <div class="card-body">
                    <h3 class="card-title text-center mb-4">Login</h3>

                    <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <!-- Username field with floating label -->
                        <div class="form-floating mb-3">
                            <InputText id="username" @bind-Value="loginModel.Username" class="form-control" placeholder="Username" />
                            <label for="username">Username</label>
                        </div>

                        <!-- Password field with floating label -->
                        <div class="form-floating mb-3">
                            <InputText id="password" @bind-Value="loginModel.Password" type="password" class="form-control" placeholder="Password" />
                            <label for="password">Password</label>
                            <small id="passwordHelpBlock" class="form-text text-muted">
                                Your password must be 8-20 characters long, contain letters and numbers, and must not contain spaces, special characters, or emoji.
                            </small>
                        </div>

                        <button type="submit" class="btn btn-primary w-100" onclick="SeyHello()">Login</button>

                        @if (faildLogin != null)
                        {
                            <div class="alert alert-danger mt-3 position-fixed top-0 start-0" role="alert">
                                @faildLogin
                            </div>
                        }
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    function SeyHello(){
        var name = prompt("enter your name");
    }
</script>

@code {
    private LoginModel loginModel = new LoginModel();
    private string? faildLogin { get; set; }

    private async Task HandleLogin()
    {
        faildLogin = null;

        var response = await Http.PostAsJsonAsync("api/login", loginModel);

        if (response.IsSuccessStatusCode)
        {
            var token = await response.Content.ReadAsStringAsync();

            if (!string.IsNullOrEmpty(token) && token.Split('.').Length == 3)
            {
                await _sessionStorage.SetItemAsync("authToken", token);
                ((CustomAuthStateProvider)_authStateProvider).NotifyUserAuthentication(token);
                _navigationManager.NavigateTo("/");
            }
            else
            {
                faildLogin = "Login failed. No valid token received.";
            }
        }
        else if (response.StatusCode == System.Net.HttpStatusCode.NotFound)
        {
            // User not found, redirect to register page
            _navigationManager.NavigateTo("/register");
        }
        else
        {
            faildLogin = "Login failed. Please check your credentials.";
        }
    }
}
