@page "/register"
@layout CustomLayout
@inject HttpClient Http
@using RealWorldApp.Shared.Models

<h3>Register</h3>
<EditForm Model="registerModel" OnValidSubmit="RegisterUser">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Username:</label>
        <InputText @bind-Value="registerModel.Username" />
    </div>
    <div>
        <label>Password:</label>
        <InputText @bind-Value="registerModel.Password" type="password" />
    </div>

    <button type="submit">Register</button>
</EditForm>
@if (successRegister != null)
{
    <span class="alert alert-info">@successRegister</span>
}
else if (faildRegister != null)
{
    <span class="alert alert-danger">@faildRegister</span>
}

@code {
    private RegisterModel registerModel = new RegisterModel();
    private string? successRegister;
    private string? faildRegister;

    private async Task RegisterUser()
    {
        var response = await Http.PostAsJsonAsync("api/auth/register", registerModel);
        if (response.IsSuccessStatusCode)
        {
            successRegister = "Congratulations, you have registered successfully!";
        }
        else
        {
            faildRegister = "You are not allowed to register.";
        }
    }
}
