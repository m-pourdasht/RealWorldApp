@page "/products"
@using RealWorldApp.Shared.Models
@using RealWorldApp.Client.Services
@inject ProductService ProductService
@inject IJSRuntime JSRuntime

@if (products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Price</th>
                <th>Description</th>
                <th>Stock</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.Name</td>
                    <td>@product.Price</td>
                    <td>@product.Description</td>
                    <td>@product.Stock</td>
                    <td><button class="btn btn-danger" @onclick="() => DeleteProduct(product.Id)">Delete</button></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Product> products;

    protected override async Task OnInitializedAsync()
    {
        products = await ProductService.GetProductsAsync();
    }
    private async Task DeleteProduct(int productId)
    {
        // Invoke a confirmation dialog using JSRuntime
        var confirmDelete = await JSRuntime.InvokeAsync<bool>("confirm", new object[] { "Are you sure you want to delete this product?" });
        if (confirmDelete)
        {
            await ProductService.DeleteProductAsync(productId); // Call service to delete
            products = await ProductService.GetProductsAsync(); // Refresh the product list
        }
    }
}
