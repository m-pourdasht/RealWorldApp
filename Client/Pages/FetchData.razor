@page "/fetchdata"
@attribute [Authorize]
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authorization
@using RealWorldApp.Shared
@inject HttpClient Http
@using RealWorldApp.Client.Services
@inject BlockUIService BlockUI

<div id="weather" class="card-body min-h-500px">
    @if (forecasts == null)
    {
        <div class="text-center">
            <div class="spinner-border text-primary" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Temp. (C)</th>
                    <th>Temp. (F)</th>
                    <th>Summary</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var forecast in forecasts)
                {
                    <tr>
                        <td>@forecast.Date.ToShortDateString()</td>
                        <td>@forecast.TemperatureC</td>
                        <td>@forecast.TemperatureF</td>
                        <td>@forecast.Summary</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    private List<WeatherForecast>? forecasts;

    protected override async Task OnInitializedAsync()
    {
        await BlockUI.Block("weather");
        try
        {
            await Task.Delay(2000);
            forecasts = await Http.GetFromJsonAsync<List<WeatherForecast>>("WeatherForecast");
        }
        finally
        {
            await BlockUI.Release("weather");
        }
        
    }
}
